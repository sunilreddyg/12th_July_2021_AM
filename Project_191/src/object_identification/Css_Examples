Example1:--> Identify location with parent node..

HtmlSource:-->
				<div id="reg_container"  class="form">
						<input id="12ed345" type="text"></input>    --> No Unique properties
				</div>

syntax:-->
				By.cssSelector("div[id='reg_container'] > input")

================================================================
Example2:--->
Recognize object Using Parent Node when Element is duplicated.
------------->Html Source--------->   

<html>
<body>
		<div id="reg_container"  class="form">
				<input id="email" type="text"></input>
		</div>

		<div id="reg_login"  class="form">
				<input id="email" type="text"></input>  ------>>>>TargetElement
		</div>
</body>
</html>

----------------------------------------------------------------------------------------------->
Syntax:-->
	parenttagname[property='pvalue'] > childtagname

	By.cssSelector("div[id='reg_login'] > input[id='email'] ");

==============================================================================
Example3:-->
Recognize object when parent element having Group child elements
------------->Html Source--------->   

<html>
<body>
			<div id="reg_container"  class="form">
						<input id="email" type="text"></input>
			</div>

			<div id="reg_login"  class="form">
						<input id="sample" class="abc"></input>
						<input id="email" type="text"></input>  ------>>>>TargetElement	
			</div>
</body>
</html>
---------------------------------------------------------------------------------->
Syntax:-->
	parenttagname[property='pvalue'] > childtagname[prop='pvalue']

	By.cssSelector("div[id='reg_login'] > input[id='email']");
	By.cssSelector("div[id='reg_login'] > input[type='text']");
----------------------------------------------------------------------	
Example4:-->
Recognize object when parent-element having duplicate child-elements
Htmlsource:--->

<html>
<body>

	<div id="reg_login"  class="form">
			<input id="sample" class="abc"></input>
			<div   id="abc" class="xyz"></input>  
			<input id="sample" class="abc"></input>		------>>>>TargetElement
			<input id="sample" class="abc"></input>	
	</div>
</body>
</html>

Cssposition:--->
			tagname:nth-child(int pos)
			tagname:nth-of-type(int pos)
			tagname:nth-last-child(int pos)
			
Relative syntax with position:--->
				
			By.cssSelector("div[id='reg_login'] > input:nth-child(3)")
			By.cssSelector("div[id='reg_login'] > input:nth-of-type(2)")
------------------------------------------------------------->>
Example5:-->
		recognize element with position
	
	Htmlsource:--->
			<select id="ClassType"  class="Auto_Complete">
					<option> Economy </option>
					<option> Business </option>   ----> target element
					<option> Peconomy </option>
			</select>

Css Position syntax:-->
			
				tagname:nth-child(int pos)
				
				select[id='ClassType'] > option:nth-child(2)
				
---------------------------------------------------------------->>
Example6:--> 
Recognized object with Sibling Refernce:-->

		+  and ~  symbols identify following sibling objects with in cssSelector


HtmlSource:-->

<div  id="Container">
	<input id="MID" type="text">
	<div class="abc"></div> -------------------------------------> Target this location
</div>

IDentifying child object with parent reference:-->

		div[id='Container'] > div.abc



Identifying sibling object using elder sibling refernce:-->


		input[id='MID'] + div.abc
		input[id='MID'] ~ div.abc

-------------------------------------------------------------
Example7:-->
Recognize object with Sibling reference:-->


<div  id="Container">
	<input id="MID" type="text">
	<selector  class="xyz" ></selector>
	<div class="abc"></div> -------------------------------------> Target this location
</div>


		input[id='MID'] + selector.xyz  + div
		input[id='MID'] ~ selector.xyz  ~ div